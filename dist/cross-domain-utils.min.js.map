{"version":3,"sources":["webpack://crossDomainUtils/webpack/universalModuleDefinition","webpack://crossDomainUtils/webpack/bootstrap","webpack://crossDomainUtils/./src/util.ts","webpack://crossDomainUtils/./src/constants.ts","webpack://crossDomainUtils/./src/utils.ts","webpack://crossDomainUtils/./src/types.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","isRegex","item","toString","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isFileProtocol","win","window","location","protocol","isAboutProtocol","getParent","parent","err","getOpener","opener","canReadFromWindow","getActualDomain","Error","host","getDomain","domain","mockDomain","indexOf","isBlankDomain","href","isActuallySameDomain","desc","getOwnPropertyDescriptor","isSameDomain","assertSameDomain","getParents","result","push","isAncestorParent","child","childParent","getFrames","frames","len","length","frame","getAllChildFrames","getTop","top","getNextOpener","getUltimateTop","getAllFramesInWindow","getAllWindows","isTop","isFrameWindowClosed","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","linkFrameWindow","splice","cleanIframes","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","findChildFrameByName","namedFrame","findFrameByName","isParent","frameParent","isOpener","getAncestor","getAncestors","results","ancestor","isAncestor","actualParent","isPopup","Boolean","isIframe","isFullpage","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","getNthParent","getNthParentFromTop","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","match","JSON","stringify","some","subpattern","stringifyDomainPattern","join","getDomainFromUrl","url","split","slice","onCloseWindow","callback","delay","maxtime","timeout","Infinity","check","clearTimeout","setTimeout","cancel","isWindow","obj","Window","__cross_domain_utils_window_check__","isBrowser","isCurrentDomain","isMockDomain","normalizeMockUrl","closeWindow","close","getFrameForWindow","frameElement","document","querySelectorAll","TYPES"],"mappings":"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","file":"cross-domain-utils.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"crossDomainUtils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"crossDomainUtils\"] = factory();\n\telse\n\t\troot[\"crossDomainUtils\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export function isRegex(item: unknown): boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\nexport function noop(...args: ReadonlyArray<unknown>): void { // eslint-disable-line @typescript-eslint/no-unused-vars\n    // pass\n}\n","export const PROTOCOL = {\n    MOCK:  ('mock:' as const),\n    FILE:  ('file:' as const),\n    ABOUT: ('about:' as const)\n};\nexport const WILDCARD = '*';\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' as const),\n    POPUP:  ('popup' as const)\n};\n","/* eslint max-lines: 0 */\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win: SameDomainWindowType = window): boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\nexport function isAboutProtocol(win: SameDomainWindowType = window): boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win: CrossDomainWindowType = window): CrossDomainWindowType | null | undefined {\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) { // pass\n    }\n}\n\nexport function getOpener(win: CrossDomainWindowType = window): CrossDomainWindowType | null | undefined {\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) { // pass\n    }\n}\nexport function canReadFromWindow(win: CrossDomainWindowType | SameDomainWindowType): boolean {\n    try {\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) { // pass\n    }\n\n    return false;\n}\nexport function getActualDomain(win: SameDomainWindowType = window): string {\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n        // @ts-ignore - trying to reassing to something that might be window\n        const parent = getParent(win);\n\n        if (parent && canReadFromWindow(parent)) {\n            // @ts-ignore\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n// @ts-ignore\nexport function getDomain(win: SameDomainWindowType = window): string {\n    const domain = getActualDomain(win);\n\n    // @ts-ignore - mockDomain\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        // @ts-ignore - mockDomain\n        return win.mockDomain;\n    }\n\n    return domain;\n}\nexport function isBlankDomain(win: CrossDomainWindowType): boolean {\n    try {\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) { // pass\n    }\n\n    return false;\n}\nexport function isActuallySameDomain(win: CrossDomainWindowType): boolean {\n    try {\n        if (win === window) {\n            return true;\n        }\n    } catch (err) { // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n    } catch (err) { // pass\n    }\n\n    try {\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) { // pass\n    }\n\n    try {\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n    } catch (err) { // pass\n    }\n\n    return false;\n}\nexport function isSameDomain(win: CrossDomainWindowType | SameDomainWindowType): boolean {\n    // @ts-ignore\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n    } catch (err) { // pass\n    }\n\n    return false;\n}\nexport function assertSameDomain(win: CrossDomainWindowType | SameDomainWindowType): SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    return win;\n}\nexport function getParents(win: CrossDomainWindowType): ReadonlyArray<CrossDomainWindowType> {\n    const result = [];\n\n    try {\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n    } catch (err) { // pass\n    }\n\n    return result;\n}\nexport function isAncestorParent(parent: CrossDomainWindowType, child: CrossDomainWindowType): boolean {\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\nexport function getFrames(win: CrossDomainWindowType): ReadonlyArray<CrossDomainWindowType> {\n    const result: any =  [];\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) { // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\nexport function getAllChildFrames(win: CrossDomainWindowType): ReadonlyArray<CrossDomainWindowType> {\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\nexport function getTop(win: CrossDomainWindowType = window): CrossDomainWindowType | null | undefined {\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) { // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) { // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) { // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) { // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\nexport function getNextOpener(win: CrossDomainWindowType = window): CrossDomainWindowType | null | undefined {\n    return getOpener(getTop(win) || win);\n}\nexport function getUltimateTop(win: CrossDomainWindowType = window): CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\nexport function getAllFramesInWindow(win: CrossDomainWindowType): ReadonlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\nexport function getAllWindows(win: CrossDomainWindowType = window): ReadonlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\nexport function isTop(win: CrossDomainWindowType): boolean {\n    return win === getTop(win);\n}\nexport function isFrameWindowClosed(frame: HTMLIFrameElement): boolean {\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            // @ts-ignore\n            parent = parent.parentNode;\n        }\n\n        // @ts-ignore\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection: ReadonlyArray<T>, item: T): number {\n    for (let i = 0; i < collection.length; i++) {\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) { // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows: any = [];\nconst iframeFrames: any = [];\nexport function isWindowClosed(win: CrossDomainWindowType, allowMock = true): boolean {\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n    } catch (err) {\n        // I love you so much IE\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // @ts-ignore\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) { // pass\n        }\n    }\n\n    // Mobile safari\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) { // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) { // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame: HTMLIFrameElement): void {\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) { // pass\n        }\n    }\n}\nexport function getUserAgent(win: SameDomainWindowType | null | undefined): string {\n    win = win || window;\n    // @ts-ignore\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\nexport function getFrameByName(win: CrossDomainWindowType, name: string): CrossDomainWindowType | null | undefined {\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) { // pass\n        }\n    }\n\n    try {\n        // @ts-ignore\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // @ts-ignore\n            return win.frames[name];\n        }\n    } catch (err) { // pass\n    }\n\n    try {\n        // @ts-ignore\n        if (winFrames.indexOf(win[name]) !== -1) {\n            // @ts-ignore\n            return win[name];\n        }\n    } catch (err) { // pass\n    }\n}\nexport function findChildFrameByName(win: CrossDomainWindowType, name: string): CrossDomainWindowType | null | undefined {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\nexport function findFrameByName(win: CrossDomainWindowType, name: string): CrossDomainWindowType | null | undefined {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n    return findChildFrameByName(top, name);\n}\nexport function isParent(win: CrossDomainWindowType, frame: CrossDomainWindowType): boolean {\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\nexport function isOpener(parent: CrossDomainWindowType, child: CrossDomainWindowType): boolean {\n    return parent === getOpener(child);\n}\nexport function getAncestor(win: CrossDomainWindowType = window): CrossDomainWindowType | null | undefined {\n    win = win || window;\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\nexport function getAncestors(win: CrossDomainWindowType): ReadonlyArray<CrossDomainWindowType> {\n    const results = [];\n    let ancestor = win;\n\n    while (ancestor) {\n        // @ts-ignore\n        ancestor = getAncestor(ancestor);\n\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\nexport function isAncestor(parent: CrossDomainWindowType, child: CrossDomainWindowType): boolean {\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\nexport function isPopup(win: CrossDomainWindowType = window): boolean {\n    return Boolean(getOpener(win));\n}\nexport function isIframe(win: CrossDomainWindowType = window): boolean {\n    return Boolean(getParent(win));\n}\nexport function isFullpage(win: CrossDomainWindowType = window): boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1: ReadonlyArray<any>, collection2: ReadonlyArray<any>): boolean {\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win: CrossDomainWindowType = window): number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        // @ts-ignore - trying to reassing to something that might be window\n        parent = getParent(parent);\n\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\nexport function getNthParent(win: CrossDomainWindowType, n = 1): CrossDomainWindowType | undefined | null {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        // @ts-ignore - trying to reassing to something that might be window\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\nexport function getNthParentFromTop(win: CrossDomainWindowType, n = 1): CrossDomainWindowType | null | undefined {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\nexport function isSameTopWindow(win1: CrossDomainWindowType, win2: CrossDomainWindowType): boolean {\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) { // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\nexport function matchDomain(pattern: DomainMatcher, origin: DomainMatcher): boolean {\n    if (typeof pattern === 'string') {\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // @ts-ignore - earlier already shortcutted the string case\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\nexport function stringifyDomainPattern(pattern: DomainMatcher): string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() })`;\n    } else {\n        return pattern.toString();\n    }\n}\nexport function getDomainFromUrl(url: string): string {\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n    return domain;\n}\nexport function onCloseWindow(win: CrossDomainWindowType, callback: (...args: Array<any>) => any, delay = 1000, maxtime = Infinity): {\n    cancel: () => void;\n} {\n    let timeout: any;\n\n    const check = () => {\n        if (isWindowClosed(win)) {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n\n    };\n}\n// eslint-disable-next-line complexity\nexport function isWindow(obj: Record<string, any>): boolean {\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n\n        // @ts-ignore this equality check is a self compare\n        if (noop(obj === obj) === '__unlikely_value__') {  // eslint-disable-line no-self-compare\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) { // pass\n    }\n\n    return false;\n}\nexport function isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.location !== 'undefined';\n}\nexport function isCurrentDomain(domain: string): boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return getDomain() === domain;\n}\nexport function isMockDomain(domain: string): boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\nexport function normalizeMockUrl(url: string): string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    // @ts-ignore - global\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\nexport function closeWindow(win: CrossDomainWindowType): void {\n    try {\n        win.close();\n    } catch (err) { // pass\n    }\n}\nexport function getFrameForWindow(win: CrossDomainWindowType): HTMLElement | null | undefined {\n    if (isSameDomain(win)) {\n        // @ts-ignore\n        return assertSameDomain(win).frameElement;\n    }\n\n    // @ts-ignore not an array type, but is iterable so fine\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","// export something to force webpack to see this as an ES module\nexport const TYPES = true;\nexport type CrossDomainLocationType = Record<any, any>;\n\nexport type CrossDomainWindowType = Window;\nexport type SameDomainWindowType = Omit<Window, 'frames'|'parent'|'focus'|'top'|'opener'|'postMessage'>;\n\nexport type DomainMatcher = string | ReadonlyArray<string> | ReadonlyArray<string> | RegExp;\n"],"sourceRoot":""}